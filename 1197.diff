diff --git a/.github/workflows/build-publish-next.yml b/.github/workflows/build-publish-next.yml
index b56e61b62..149358b6a 100644
--- a/.github/workflows/build-publish-next.yml
+++ b/.github/workflows/build-publish-next.yml
@@ -47,3 +47,23 @@ jobs:
       run: printf "//registry.npmjs.org/:_authToken=${{ secrets.CHE_NPM_AUTH_TOKEN }}\n" >> ~/.npmrc
     - name: Publish packages to npmjs
       run: yarn publish:next
+
+  # TODO: uncomment this when we're happy that travis is working for PRs
+  # travis-build:
+  #   runs-on: ubuntu-latest
+  #   continue-on-error: true
+  #   steps:
+  #   - name: Trigger build on Travis CI
+  #     run: |
+  #       body="{
+  #       \"request\":{
+  #       \"branch\":\"main\"
+  #       }}"
+
+  #       curl -s -X POST \
+  #       -H "Content-Type: application/json" \
+  #       -H "Accept: application/json" \
+  #       -H "Travis-API-Version: 3" \
+  #       -H "Authorization: token ${{ secrets.TRAVIS_TOKEN }}" \
+  #       -d "$body" \
+  #       https://api.travis-ci.com/repo/eclipse-che%2Fche-theia/requests
diff --git a/.github/workflows/check-theia-branch.yml b/.github/workflows/check-theia-branch.yml
index 3c1dd0564..0bd8baa2a 100644
--- a/.github/workflows/check-theia-branch.yml
+++ b/.github/workflows/check-theia-branch.yml
@@ -38,3 +38,29 @@ jobs:
         docker pull quay.io/eclipse/che-theia-dev:next
         docker tag quay.io/eclipse/che-theia-dev:next eclipse/che-theia-dev:next
         ./build.sh --root-yarn-opts:--ignore-scripts --dockerfile:Dockerfile.alpine --build-args:THEIA_GITHUB_REPO=${{ github.event.inputs.theia_github_repo }} --branch:${{ github.event.inputs.theia_branch }}
+
+  # TODO: uncomment this when we're happy that travis is working for PRs and :next builds
+  # travis-build:
+  #   runs-on: ubuntu-latest
+  #   continue-on-error: true
+  #   steps:
+  #   - name: Trigger build on Travis CI
+  #     run: |
+  #       body="{
+  #       \"request\":{
+  #       \"config\": {
+  #         \"env\": {
+  #           \"global\": [
+  #             \"THEIA_GITHUB_REPO=${{ github.event.inputs.theia_github_repo }}\",
+  #             \"THEIA_BRANCH=${{ github.event.inputs.theia_branch }}\"
+  #            ]
+  #          }
+  #       } 
+  #       }}"
+  #       curl -s -X POST \
+  #       -H "Content-Type: application/json" \
+  #       -H "Accept: application/json" \
+  #       -H "Travis-API-Version: 3" \
+  #       -H "Authorization: token ${{ secrets.TRAVIS_TOKEN }}" \
+  #       -d "$body" \
+  #       https://api.travis-ci.com/repo/eclipse-che%2Fche-theia/requests
diff --git a/.github/workflows/pr-build.yml b/.github/workflows/pr-build.yml
index 0c60a1604..03645f2af 100644
--- a/.github/workflows/pr-build.yml
+++ b/.github/workflows/pr-build.yml
@@ -48,3 +48,27 @@ jobs:
         docker pull quay.io/eclipse/che-theia-dev:next
         docker tag quay.io/eclipse/che-theia-dev:next eclipse/che-theia-dev:next
         ./build.sh --root-yarn-opts:--ignore-scripts --dockerfile:Dockerfile.${{matrix.dist}}
+
+  travis-build:
+    runs-on: ubuntu-latest
+    continue-on-error: true
+    steps:
+    - name: Trigger build on Travis CI
+      run: |
+        body="{
+        \"request\":{
+        \"config\": {
+          \"env\": {
+            \"global\": [
+              \"PR_NUMBER=${{ github.event.pull_request.number }}\"
+             ]
+           }
+        }
+        }}"
+        curl -s -X POST \
+        -H "Content-Type: application/json" \
+        -H "Accept: application/json" \
+        -H "Travis-API-Version: 3" \
+        -H "Authorization: token ${{ secrets.TRAVIS_TOKEN }}" \
+        -d "$body" \
+        https://api.travis-ci.com/repo/eclipse-che%2Fche-theia/requests
diff --git a/.github/workflows/release.yml b/.github/workflows/release.yml
index c7b218193..0f81930dd 100644
--- a/.github/workflows/release.yml
+++ b/.github/workflows/release.yml
@@ -104,3 +104,30 @@ jobs:
         MATTERMOST_WEBHOOK_URL: ${{ secrets.MATTERMOST_WEBHOOK_URL }}
         MATTERMOST_CHANNEL: eclipse-che-releases
         MATTERMOST_USERNAME: che-bot
+
+  # TODO: uncomment this when we're happy that travis is working for PRs, branch checks, and :next builds
+  # travis-release:
+  #   needs: build
+  #   runs-on: ubuntu-latest
+  #   continue-on-error: true
+  #   steps:
+  #   - name: Trigger build on Travis CI
+  #     run: |
+  #       body="{
+  #       \"request\":{
+  #       \"config\": {
+  #         \"env\": {
+  #           \"global\": [
+  #             \"TAG=${{ github.event.inputs.version }}\"
+  #            ]
+  #          }
+  #       }
+  #       }}"
+
+  #       curl -s -X POST \
+  #       -H "Content-Type: application/json" \
+  #       -H "Accept: application/json" \
+  #       -H "Travis-API-Version: 3" \
+  #       -H "Authorization: token ${{ secrets.TRAVIS_TOKEN }}" \
+  #       -d "$body" \
+  #       https://api.travis-ci.com/repo/eclipse-che%2Fche-theia/requests
diff --git a/.travis.yml b/.travis.yml
new file mode 100644
index 000000000..1b261513b
--- /dev/null
+++ b/.travis.yml
@@ -0,0 +1,199 @@
+#
+# Copyright (c) 2021 Red Hat, Inc.
+# This program and the accompanying materials are made
+# available under the terms of the Eclipse Public License 2.0
+# which is available at https://www.eclipse.org/legal/epl-2.0/
+#
+# SPDX-License-Identifier: EPL-2.0
+#
+# Contributors:
+#   Red Hat, Inc. - initial API and implementation
+
+dist: focal
+os: linux
+cache: false
+git:
+  depth: false 
+
+language: node_js
+node_js: "12.20.0"
+
+before_install:
+  - |
+    if [[ "${TRAVIS_CPU_ARCH}" == "ppc64le" ]]; then
+      # fix cpu count to avoid OOM failure
+      cat /proc/stat > /tmp/stat
+      sed -i '/^cpu[4-9]/d' /tmp/stat
+      sed -i '/^cpu[0-9][0-9]/d' /tmp/stat
+      sudo mount --bind /tmp/stat /proc/stat
+    fi
+
+install:
+  # TODO when we're confident that sha-tagged travis-built images won't collide with GHA built ones, we can remove the -travis suffix here
+  - export SHORT_SHA=$(git rev-parse --short HEAD)-travis
+  - export GITHUB_TOKEN="$CHE_BOT_GITHUB_TOKEN"
+  - echo "$RH_CHE_AUTOMATION_DOCKERHUB_PASSWORD" | docker login -u "$RH_CHE_AUTOMATION_DOCKERHUB_USERNAME" --password-stdin
+  - echo "$QUAY_ECLIPSE_CHE_PASSWORD" | docker login quay.io -u "$QUAY_ECLIPSE_CHE_USERNAME" --password-stdin
+
+env: 
+  global:
+  - TAG=next-travis
+  - REGISTRY=quay.io
+  - ORGANIZATION=eclipse
+  - PR_NUMBER=
+
+jobs:
+  fast_finish: true
+  allow_failures:
+   - if: env(PR_NUMBER) IS present
+     arch: arm64-graviton2
+   - if: env(PR_NUMBER) IS present
+     arch: ppc64le
+   - if: env(PR_NUMBER) IS present
+     arch: s390x
+  include: 
+    - &node-build
+      stage: PR Check
+      name: Node Build on amd64
+      if: env(PR_NUMBER) IS present
+      arch: amd64
+      install:
+        - sudo apt-get update && sudo apt-get install -y libsecret-1-dev
+        - git fetch origin +refs/pull/${PR_NUMBER}/merge
+        - git checkout -qf FETCH_HEAD
+      script: yarn
+    - <<: *node-build
+      name: Node Build on arm64
+      arch: arm64-graviton2
+      group: edge
+      virt: vm
+    - <<: *node-build
+      name: Node Build on ppc64le
+      arch: ppc64le
+    - <<: *node-build
+      name: Node Build on s390x
+      arch: s390x
+    - &docker-build
+      if: env(PR_NUMBER) IS present
+      name: Docker build (Alpine) on amd64
+      arch: amd64
+      env: DIST=alpine
+      install:
+        - git fetch origin +refs/pull/${PR_NUMBER}/merge
+        - git checkout -qf FETCH_HEAD
+      script:
+      - |
+        set -e
+        docker image prune -a -f
+        docker pull quay.io/eclipse/che-theia-dev:next-travis
+        docker tag quay.io/eclipse/che-theia-dev:next-travis eclipse/che-theia-dev:next-travis
+        TAG=$TAG-${TRAVIS_CPU_ARCH} ./build.sh --root-yarn-opts:--ignore-scripts --dockerfile:Dockerfile.$DIST
+    - <<: *docker-build
+      name: Docker build (Alpine) on arm64
+      arch: arm64-graviton2
+      group: edge
+      virt: vm
+    - <<: *docker-build
+      name: Docker build (Alpine) on ppc64le
+      arch: ppc64le
+    - <<: *docker-build
+      name: Docker build (Alpine) on s390x
+      arch: s390x
+    - <<: *docker-build
+      name: Docker build (ubi8) on amd64
+      arch: amd64
+      env: DIST=ubi8
+    - <<: *docker-build
+      name: Docker build (ubi8) on arm64
+      arch: arm64-graviton2
+      group: edge
+      virt: vm
+      env: DIST=ubi8
+    - <<: *docker-build
+      name: Docker build (ubi8) on ppc64le
+      arch: ppc64le
+      env: DIST=ubi8
+    - <<: *docker-build
+      name: Docker build (ubi8) on s390x
+      arch: s390x
+      env: DIST=ubi8
+
+    - &build-and-push-next
+      stage: Build & Publish 'next-travis'
+      name: Build & Publish image on amd64 
+      if: type = api AND branch = main AND env(TAG) = "next-travis" AND env(THEIA_GITHUB_REPO) IS blank AND env(PR_NUMBER) IS blank
+      arch: amd64
+      script: 
+      - |
+        set -e
+        docker image prune -a -f
+        TAG=$TAG-${TRAVIS_CPU_ARCH} ./build.sh --root-yarn-opts:--ignore-scripts --dockerfile:Dockerfile.alpine --push
+    - <<: *build-and-push-next
+      arch: arm64-graviton2
+      group: edge
+      virt: vm
+      name: Build & Publish image on arm64
+    - <<: *build-and-push-next
+      arch: ppc64le
+      name: Build & Publish image on ppc64le
+    - <<: *build-and-push-next
+      arch: s390x
+      name: Build & Publish image on s390x
+
+    - stage: Publish multiarch image with 'next-travis' tag
+      if: type = api AND branch = main AND env(TAG) = "next-travis" AND env(THEIA_GITHUB_REPO) IS blank AND env(PR_NUMBER) IS blank
+      name: Publish multiarch image with next-travis tag
+      script: .ci/travis/publish_multiarch.sh
+
+    - &check-a-theia-branch
+      stage: Check a Theia branch
+      name: Build an image against Theia branch on amd64
+      arch: amd64
+      if: type = api AND env(THEIA_GITHUB_REPO) AND env(THEIA_BRANCH)
+      script:
+      - |
+        set -e
+        docker image prune -a -f
+        docker pull quay.io/eclipse/che-theia-dev:next-travis
+        docker tag quay.io/eclipse/che-theia-dev:next-travis eclipse/che-theia-dev:next-travis
+        TAG=$TAG-${TRAVIS_CPU_ARCH} ./build.sh --root-yarn-opts:--ignore-scripts --dockerfile:Dockerfile.alpine --build-args:THEIA_GITHUB_REPO=${THEIA_GITHUB_REPO} --branch:${THEIA_BRANCH}
+    - <<: *check-a-theia-branch
+      arch: arm64-graviton2
+      group: edge
+      virt: vm
+      name: Build an image against Theia branch on arm64
+    - <<: *check-a-theia-branch
+      arch: ppc64le
+      name: Build an image against Theia branch on ppc64le
+    - <<: *check-a-theia-branch
+      arch: s390x
+      name: Build an image against Theia branch on s390x
+    
+    #Release Workflow
+    - &release-che-theia
+      stage: Release che-theia
+      name: Build and publish image on amd64
+      if: type = api AND env(TAG) IS present AND env(TAG) != "next-travis"
+      arch: amd64
+      script:
+      - |  
+        BRANCH=${TAG%.*}.x
+        git checkout "${BRANCH}"
+        TAG=$TAG-travis
+        docker image prune -a -f
+        TAG=$TAG-${TRAVIS_CPU_ARCH} ./build.sh --root-yarn-opts:--ignore-scripts --dockerfile:Dockerfile.alpine --push
+    - <<: *release-che-theia
+      arch: arm64-graviton2
+      group: edge
+      virt: vm
+      name: Build and publish image on arm64
+    - <<: *release-che-theia
+      arch: ppc64le 
+      name: Build and publish image on ppc64le
+    - <<: *release-che-theia
+      arch: s390x
+      name: Build and publish image on s390x
+
+    - stage: Publish multiarch image 
+      if: type = api AND env(TAG) IS present AND env(TAG) != "next-travis"
+      script: .ci/travis/publish_multiarch.sh
diff --git a/.travis/publish_multiarch.sh b/.travis/publish_multiarch.sh
new file mode 100755
index 000000000..3f6b26764
--- /dev/null
+++ b/.travis/publish_multiarch.sh
@@ -0,0 +1,42 @@
+#!/bin/bash
+#
+# Copyright (c) 2021 Red Hat, Inc.
+# This program and the accompanying materials are made
+# available under the terms of the Eclipse Public License 2.0
+# which is available at https://www.eclipse.org/legal/epl-2.0/
+#
+# SPDX-License-Identifier: EPL-2.0
+#
+# Contributors:
+#   Red Hat, Inc. - initial API and implementation
+#
+# Create amend with images built on individual architectures
+
+set -e
+
+PUBLISH_IMAGES_LIST=(
+  che-theia-dev
+  che-theia
+  che-theia-endpoint-runtime-binary
+  che-theia-vsix-installer
+)
+for image in "${PUBLISH_IMAGES_LIST[@]}"; do
+    the_image="${REGISTRY}/${ORGANIZATION}/${image}"
+    AMEND=""
+    AMEND+=" --amend ${the_image}:${TAG}-amd64";
+    AMEND+=" --amend ${the_image}:${TAG}-arm64";
+    AMEND+=" --amend ${the_image}:${TAG}-ppc64le";
+    AMEND+=" --amend ${the_image}:${TAG}-s390x";
+
+    # Create manifest and push multiarch image
+    docker manifest create "${the_image}:${TAG}" "$AMEND"
+    docker manifest push "${the_image}:${TAG}"
+    
+    if [[ "${TAG}" == "next-travis" ]]; then
+       docker manifest create "${the_image}:${SHORT_SHA}" "$AMEND"
+       docker manifest push "${the_image}:${SHORT_SHA}"
+    else 
+       docker manifest create "${the_image}:latest" "$AMEND"
+       docker manifest push "${the_image}:latest"
+    fi
+done
diff --git a/build.include b/build.include
index 0b1ad841f..9e4953290 100644
--- a/build.include
+++ b/build.include
@@ -17,6 +17,7 @@ THEIA_BRANCH="master"
 THEIA_COMMIT_SHA=
 THEIA_GIT_REFS="refs\\/heads\\/master"
 THEIA_DOCKER_IMAGE_VERSION=
+SHA1_SUFFIX=
 
 prepare_yarn_root_args() {
     IFS=',' read -r -a YARN_ARGS_ARRAY <<< "$@"
@@ -109,6 +110,9 @@ publishImages() {
       echo y | docker push "${REGISTRY}/${image}:${THEIA_DOCKER_IMAGE_VERSION}"
     else
       SHORT_SHA=$(git rev-parse --short HEAD)
+      if [[ -n "${SHA1_SUFFIX}" ]]; then
+           SHORT_SHA=${SHORT_SHA}-${SHA1_SUFFIX}
+      fi
       echo "Publishing ${image}:${SHORT_SHA}..."
       docker tag "${image}:${IMAGE_TAG}" "${REGISTRY}/${image}:${SHORT_SHA}"
       echo y | docker push "${REGISTRY}/${image}:${SHORT_SHA}"
diff --git a/build.sh b/build.sh
index cc895334d..77b7fe658 100755
--- a/build.sh
+++ b/build.sh
@@ -15,6 +15,19 @@ set -o pipefail
 parse "$@"
 yarn ${YARN_OPTS}
 
+#Added to handle experimental Travis tag
+if [[ -n "${TAG:-}" ]]; then
+   if [[ -z "${THEIA_DOCKER_IMAGE_VERSION}" ]]; then
+        IMAGE_TAG=$TAG
+        if [[ -n "${SUFFIX:-}" ]] && [[ -z "${SHA1_SUFFIX}" ]]; then
+          SHA1_SUFFIX=$SUFFIX
+        fi
+   else
+        IMAGE_TAG=$IMAGE_TAG-$SUFFIX
+        THEIA_DOCKER_IMAGE_VERSION=$TAG
+   fi
+fi
+
 buildImages
 
 if is_publish_images; then
